import requests
import discord
import os, random
from settings import settings
from bot_logic import *
from discord.ext import commands
# Zmienna intencje przechowuje uprawnienia bota
intents = discord.Intents.default()
# Włączanie uprawnienia do czytania wiadomości
intents.message_content = True
# Tworzenie bota w zmiennej klienta i przekazanie mu uprawnień
# client = discord.Client(intents=intents)
bot = commands.Bot(command_prefix=';', intents=intents)

@bot.event
async def on_ready():
    print(f'Zalogowaliśmy się jako {bot.user}')


# def get_duck_image_url():    
#     url = 'https://random-d.uk/api/random'
#     res = requests.get(url)
#     data = res.json()
#     return data['url']

# @bot.command('duck')
# async def duck(ctx):
#     '''Po wywołaniu polecenia duck program wywołuje funkcję get_duck_image_url'''
#     image_url = get_duck_image_url()
#     await ctx.send(image_url)
# @bot.command()
# async def hello(ctx):
#     await ctx.send(f'Cześć, jestem botem {bot.user}')

# @bot.command()
# async def heh(ctx, count_heh= 5):
#     await ctx.send('he' * count_heh)

# @bot.command()
# async def mem(ctx):
#     with open('images/mem1.png', 'rb') as f:
#         picture = discord.File(f)
#     await ctx.send(file=picture)

# @bot.command()
# async def randommem(ctx):
#     img_name = random.choice(os.listdir('images'))
#     with open(f'images/{img_name}','rb') as f:
#         picture = discord.File(f)

#     await ctx.send(file=picture)
# @bot.command()
# async def onie(ctx):
#     with open('images/onie.jpg', 'rb') as f:
#         picture = discord.File(f)
#     await ctx.send(file=picture)

@bot.command(name='sortuj')
async def sortuj_smieci(ctx, smieci):
    smieci = smieci.lower()
    if smieci in recykling:
        await ctx.send(recykling[smieci])
    else:
        await ctx.send('Nie posiadam informacji o recyklingu tego materiału!')
    
@bot.command(name= 'rozkład')
async def rozkład_smieci(ctx, smieciv2):
    smieciv2 =smieciv2.lower()
    if smieciv2 in rozklad:
        await ctx.send(rozklad[smieciv2])
    else:
        await ctx.send('Nie posiadam informacji o rozkładzie tego materiału!')


bot.run(settings['TOKEN'])
